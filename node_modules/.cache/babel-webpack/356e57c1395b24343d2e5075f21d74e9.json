{"ast":null,"code":"import { isTshirtSize as i, updateElementStyles as e, pxToRem as a } from \"@cds/core/internal\";\nimport r from \"ramda/es/isNil.js\";\nvar t;\n\nfunction l(e) {\n  return r(e) || \"\" === e ? t.NilSizeValue : i(e) ? t.ValidSizeString : !isNaN(parseInt(e, 10)) && e.match(/^[0-9 ]+$/) ? t.ValidNumericString : t.BadSizeValue;\n}\n\nfunction n(i, r) {\n  let n = \"\";\n\n  switch (l(r)) {\n    case t.ValidNumericString:\n      return n = a(parseInt(r)), void e(i, [\"width\", n], [\"height\", n]);\n\n    case t.ValidSizeString:\n    case t.NilSizeValue:\n      return void e(i, [\"width\", \"\"], [\"height\", \"\"]);\n\n    case t.BadSizeValue:\n    default:\n      return;\n  }\n}\n\n!function (i) {\n  i.BadSizeValue = \"bad-value\", i.ValidSizeString = \"value-is-string\", i.ValidNumericString = \"value-is-numeric\", i.NilSizeValue = \"value-is-nil\";\n}(t || (t = {}));\nexport { t as SizeUpdateStrategies, l as getUpdateSizeStrategy, n as updateIconSizeStyle }; //# sourceMappingURL=icon.classnames.js.map","map":null,"metadata":{},"sourceType":"module"}