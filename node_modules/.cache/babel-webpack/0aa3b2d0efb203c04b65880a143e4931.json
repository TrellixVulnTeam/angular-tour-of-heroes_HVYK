{"ast":null,"code":"import { listenForAttributeChange as t } from \"./dom.js\";\n\nfunction e(t) {\n  t.preventDefault(), t.stopPropagation();\n}\n\nconst r = (e, r, o) => {\n  e.hasAttribute(r) ? o(e.getAttribute(r)) : void 0 !== e[r] && o(e[r]), !e._valueTracker || \"checked\" !== r && \"value\" !== r || (e._valueTracker = null);\n  const c = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(e), r);\n  return c && Object.defineProperty(e, r, {\n    get: c.get,\n    set: t => {\n      o(t), c.set.call(e, t);\n    }\n  }), t(e, r, t => o(t));\n};\n\nexport { r as getElementUpdates, e as stopEvent }; //# sourceMappingURL=events.js.map","map":null,"metadata":{},"sourceType":"module"}